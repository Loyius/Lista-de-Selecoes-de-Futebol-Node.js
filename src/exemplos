//import express from "express"

const app = express()

//Indicar para o express ler body em json
app.use(express.json())


//mock (estrutura básica de dados para testes)
// shift + alt + seta para baixo
const selecoes = [
    {id: 1, selecoes: "Brasil", grupo: "G"},
    {id: 2, selecoes: "Suiça", grupo: "G"},
    {id: 3, selecoes: "Sérvia", grupo: "G"},
    {id: 4, selecoes: "França", grupo: "G"}
]

// retornar o objeto por id
function buscarSelecaoPorID(id){
    return selecoes.filter(selecoes => selecoes.id == id)
}

// pegar a posicao ou index do elemento no array por id
function buscaIndexSelecao(id){
    return selecoes.findIndex(selecoes => selecoes.id == id)
}

app.post("/selecoes",(req,res)=>{
    selecoes.push(req.body)
    res.status(201).send("Seleção cadastrada com sucesso")
})

//porta padrão ou raiz
app.get("/",(req, res)=>{
    res.send("Olá Larissa")
})

app.get("/selecoes",(req, res)=>{
    res.status(200).send(selecoes)
})

//let (objetos mutaveis) const (objetos imutaveis)
app.get("/selecoes/:id",(req,res)=>{
    //let index = req.params.id
    res.json(buscarSelecaoPorID(req.params.id))
})

app.put("/selecoes/:id",(req, res) =>{
    let index = buscaIndexSelecao(req.params.id)
    selecoes[index].selecoes = req.body.selecoes
    selecoes[index].grupo = req.body.grupo
    res.json(selecoes)
})

//caso não seja passado o /:id ele irá apagar todas as seleções
app.delete("/selecoes/:id",(req,res)=>{
    let index = buscaIndexSelecao(req.params.id)
    selecoes.splice(index, 1)
    res.send(`Seleção ${req.params.id} excluída com sucesso!`)
})

//export default app